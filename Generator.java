import java.lang.reflect.Method;import java.lang.reflect.Parameter;import java.util.ArrayList;import java.util.TreeSet;public class Generator {    public final static TreeSet<String> TO_IGNORE;    static {        TO_IGNORE = new TreeSet<>();        TO_IGNORE.add("wait");        TO_IGNORE.add("equals");        TO_IGNORE.add("toString");        TO_IGNORE.add("hashCode");        TO_IGNORE.add("getClass");        TO_IGNORE.add("notify");        TO_IGNORE.add("notifyAll");    }    public static void main(String[] args) {        Solution sol = new Solution();        Class cls = sol.getClass();        ArrayList<Method> meths = new ArrayList<>();        for(Method meth: cls.getMethods()) {            if(!TO_IGNORE.contains(meth.getName())) {                meths.add(meth);            }        }        meths.forEach(meth -> {            System.out.print(meth.getName() + "->[");            Parameter params[] = meth.getParameters();            for(Parameter param: params) {                System.out.print(param.getType()+",");            };            System.out.println("]");        });   }}
